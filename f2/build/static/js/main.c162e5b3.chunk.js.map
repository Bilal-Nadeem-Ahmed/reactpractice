{"version":3,"sources":["components/note/index.js","services/notes.js","components/notificastion/index.js","components/application/index.js","App.js","index.js"],"names":["Note","note","toggleImportance","lable","important","className","content","onClick","baseUrl","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Notification","message","Application","notes","setNotes","useState","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","map","find","n","changedNote","noteService","returnedNote","catch","error","setTimeout","toggleImportanceof","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","App","useEffect","initialNotes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAKeA,EALF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,iBACVC,EAAOF,EAAKG,UAAY,qBAAsB,iBACpD,OAAS,qBAAIC,UAAU,OAAd,UAAsBJ,EAAKK,QAAQ,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCD9EK,EAAU,aAkBD,GACZC,OAhBY,WAEb,OADWC,IAAMC,IAAIH,GACVI,MAAK,SAAAC,GAAG,OAAEA,EAAIC,SAexBC,OAZY,SAAAC,GAEb,OADWN,IAAMO,KAAKT,EAASQ,GACpBJ,MAAK,SAAAC,GAAG,OAAEA,EAAIC,SAWxBI,OARY,SAACC,EAAIH,GAElB,OADWN,IAAMU,IAAN,UAAaZ,EAAb,YAAwBW,GAAMH,GAC9BJ,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UCJZO,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,qBAAKjB,UAAU,QAAf,SACGiB,KCwEIC,EA1EK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAAc,EACVC,mBAC5B,iBAFsC,mBACjCC,EADiC,KACxBC,EADwB,OAIdF,oBAAS,GAJK,mBAIlCG,EAJkC,KAI1BC,EAJ0B,OAKAJ,mBAAS,MALT,mBAKjCK,EALiC,KAKnBC,EALmB,KAiDlCC,EAAaJ,EAAUL,EAAQA,EAAMU,QAAO,SAAAjC,GAAI,OAAEA,EAAKG,aAC3D,OAAS,gCACX,uCACA,cAAC,EAAD,CAAckB,QAASS,IACvB,8BACM,yBAAQxB,QAAS,kBAAMuB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGI,EAAYE,KAAI,SAAAlC,GAAI,OAChB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAlCN,SAACiB,GACxB,IAAMlB,EAAOuB,EAAMY,MAAK,SAAAC,GAAC,OAAEA,EAAElB,KAAMA,KAC7BmB,EAAW,2BAAMrC,GAAN,IAAWG,WAAYH,EAAKG,YAE7CmC,EAAYrB,OAAOC,EAAGmB,GACrB1B,MAAK,SAAA4B,GACJf,EAASD,EAAMW,KAAI,SAAAlC,GAAI,OAAGA,EAAKkB,KAAMA,EAAIlB,EAAOuC,SAEjDC,OAAM,SAAAC,GACLV,EAAgB,aAAD,OACA/B,EAAKK,QADL,sCAGfqC,YAAW,WACTX,EAAgB,QAChB,KACFP,EAASD,EAAMU,QAAO,SAAAG,GAAC,OAAIA,EAAElB,KAAOA,SAmBLyB,CAAmB3C,EAAKkB,MAFzClB,EAAKkB,SAKnB,uBAAM0B,SA1DM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjB1C,QAASqB,EACTsB,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG7Bd,EAAYxB,OAAOiC,GAClBpC,MAAK,SAAA4B,GACFf,EAASD,EAAM8B,OAAOd,IACtBZ,EAAW,QA8Cb,UACE,uBAAO2B,MAAO5B,EAAS6B,SA1CJ,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB3B,EAAWkB,EAAMa,OAAOJ,UAyCpB,wBAAQK,KAAK,SAAb,yBC3COC,MAxBf,WAAgB,IAAD,EACUnC,mBAAS,IADnB,mBACNF,EADM,KACAC,EADA,KAgBb,OAdAgC,QAAQC,IAAInB,GAEZuB,qBAAU,WACRL,QAAQC,IAAI,UACZnB,EAAY9B,SACXG,MAAK,SAAAmD,GACJN,QAAQC,IAAI,wBACZjC,EAASsC,QAGX,IACFN,QAAQC,IAAI,SAAUlC,EAAMwC,OAAQ,SAIlC,qBAAK3D,UAAU,MAAf,SAEE,cAAC,EAAD,CAAamB,MAAOA,EAAOC,SAAUA,OClB3CwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c162e5b3.chunk.js","sourcesContent":["const Note = ({note,toggleImportance}) => {\n    const lable= note.important ? 'make not important': 'make important'\n    return ( <li className='note'>{note.content}<button onClick={toggleImportance}>{lable}</button></li> );\n}\n \nexport default Note;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\n\nconst getAll = () => {\n  const req= axios.get(baseUrl)\n  return req.then(res=>res.data)\n}\n\nconst create = newObject => {\n  const req= axios.post(baseUrl, newObject)\n  return req.then(res=>res.data)\n}\n\nconst update = (id, newObject) => {\n  const req= axios.put(`${baseUrl}/${id}`, newObject)\n  return req.then(res=>res.data)\n}\n\nexport default { \n   getAll, \n   create, \n   update \n}","const Notification = ({message}) => {\n    if (message === null) {\n        return null\n      }\n    \n      return (\n        <div className=\"error\">\n          {message}\n        </div>\n      )\n}\n \nexport default Notification;","import Note from \"../note\";\nimport {useState} from 'react'\nimport noteService from '../../services/notes.js'\nimport Notification from \"../notificastion\";\n\nconst Application = ({notes,setNotes}) => {\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  ) \n  const[showAll,setShowAll]=useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n    \n  const addNote = (event) =>{\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n     \n    }\n    noteService.create(noteObject)\n    .then(returnedNote=>{\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n   \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  const toggleImportanceof=(id)=>{\n    const note = notes.find(n=>n.id ===id)\n    const changedNote ={...note,important: !note.important}\n\n    noteService.update(id,changedNote)\n    .then(returnedNote=>{\n      setNotes(notes.map(note=> note.id !==id? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setTimeout(()=>{\n        setErrorMessage(null)\n      },5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n    \n  }\n\n  const notesToShow =showAll ? notes : notes.filter(note=>note.important )\n    return ( <div>\n  <h1>Notes</h1>\n  <Notification message={errorMessage}/>\n  <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n             <Note\n              key ={note.id}\n               note={note}\n               toggleImportance={()=>toggleImportanceof(note.id)}/>\n             )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n\n    </div> );\n}\n \nexport default Application;","import './App.css';\nimport Application from './components/application';\nimport {useState,useEffect} from 'react'\nimport noteService from './services/notes'\n\n\nfunction App() {\n  const [notes,setNotes]=useState([]);\n  console.log(noteService)\n\n  useEffect(()=>{\n    console.log('effect')\n    noteService.getAll()\n    .then(initialNotes=>{\n      console.log('promise is fulfilled')\n      setNotes(initialNotes) })\n      \n\n  },[])\n  console.log('render', notes.length, 'notes')\n\n \n  return (\n    <div className=\"App\">\n\n      <Application notes={notes} setNotes={setNotes}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}